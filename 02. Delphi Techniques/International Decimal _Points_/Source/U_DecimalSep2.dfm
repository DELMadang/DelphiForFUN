object Form1: TForm1
  Left = 193
  Top = 119
  Width = 733
  Height = 500
  Caption = 'Internationalized  Decimal "Points"   Version 2.0'
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -11
  Font.Name = 'MS Sans Serif'
  Font.Style = []
  OldCreateOrder = False
  OnActivate = FormActivate
  PixelsPerInch = 96
  TextHeight = 13
  object Label1: TLabel
    Left = 352
    Top = 136
    Width = 345
    Height = 17
    AutoSize = False
    Caption = 'Enter a number to test below'
    WordWrap = True
  end
  object Label2: TLabel
    Left = 352
    Top = 184
    Width = 345
    Height = 49
    AutoSize = False
    Caption = 
      '(Old "Val" procedure will only convert numbers which use a dot f' +
      'or decimal separator.  New "Val" will convert valid numbers with' +
      ' current decimal separator setting while ignoring the thousands ' +
      'separators.) '
    WordWrap = True
  end
  object Memo1: TMemo
    Left = 16
    Top = 16
    Width = 313
    Height = 409
    Color = 14548991
    Lines.Strings = (
      
        'Programs that use floating point numbers (i.e. with decimalpoint' +
        's), '
      'need some special considerations to work correctly in countries '
      'whose decimal separator is not a dot, "." or that reads string '
      'versions of numbers generated by systems whose decimal '
      'separator does not agree with the user'#39's system.'
      ''
      'Here are three tips for the programmer to avoid problems:'
      
        '1.  Always use the decimalseparator global variable rather than ' +
        ' '#39'.'#39' '
      
        'or '#39','#39' when checking input or creating output string versions  o' +
        'f '
      'floating point numbers.'
      ''
      '2.  Do not use the system Val procedure to convert strings to'
      'floating point numbers. Delphi'#39's Val assumes that the decimal  '
      
        'separator is a dot (.). The formatting procedure StrToFloat does' +
        ' '
      'handle decimal separator values correctly.   This program '
      'contains a replacement Val procedure which uses StrToFloat to '
      'correctly recognize the current separator.'
      ''
      '3. If numeric floating point strings are written to text files,'
      'include a line identifying the decimal separator used. At input '
      
        'time,  replace that character with the current decimal separator' +
        ' '
      'for the system reading the file.'
      ''
      'Here'#39's a program than incorporates all three tips including a '
      'replacement for Delphi'#39's "Val" procedure for testing.'
      ''
      'Version 2 adds the "Thousands" separator as well, saving and '
      'restoring both Deciaml and Thouands separators.  The revised '
      'Val procedure ignores embedded thousands separators as well.'
      ' ')
    TabOrder = 0
  end
  object Edit1: TEdit
    Left = 352
    Top = 152
    Width = 121
    Height = 27
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'Arial'
    Font.Style = [fsBold]
    ParentFont = False
    TabOrder = 1
    Text = '12,345.67'
  end
  object SetDotBtn: TButton
    Left = 352
    Top = 16
    Width = 345
    Height = 25
    Caption = 'Set decimal separator to dot (.)'
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'MS Sans Serif'
    Font.Style = [fsBold]
    ParentFont = False
    TabOrder = 2
    OnClick = SetDotBtnClick
  end
  object SetCommaBtn: TButton
    Left = 352
    Top = 56
    Width = 345
    Height = 25
    Caption = 'Set decimal separator to comma (,)'
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'MS Sans Serif'
    Font.Style = [fsBold]
    ParentFont = False
    TabOrder = 3
    OnClick = SetCommaBtnClick
  end
  object TestSysValBtn: TButton
    Left = 352
    Top = 240
    Width = 169
    Height = 25
    Caption = 'Test using old "Val" procedure'
    TabOrder = 4
    OnClick = TestSysValBtnClick
  end
  object ReadTestBtn: TButton
    Left = 536
    Top = 280
    Width = 169
    Height = 25
    Caption = 'Read # from  "Test.txt" file'
    TabOrder = 5
    OnClick = ReadTestBtnClick
  end
  object WritetestBtn: TButton
    Left = 352
    Top = 280
    Width = 169
    Height = 25
    Caption = 'Write # to "Test.txt" file'
    TabOrder = 6
    OnClick = WritetestBtnClick
  end
  object Memo2: TMemo
    Left = 352
    Top = 320
    Width = 353
    Height = 105
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'Arial'
    Font.Style = [fsBold]
    ParentFont = False
    ScrollBars = ssVertical
    TabOrder = 7
  end
  object SetDefaultBtn: TButton
    Left = 352
    Top = 96
    Width = 345
    Height = 25
    Caption = 'Set decimal separator to default '
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -16
    Font.Name = 'MS Sans Serif'
    Font.Style = [fsBold]
    ParentFont = False
    TabOrder = 8
    OnClick = SetDefaultBtnClick
  end
  object TestMyValBtn: TButton
    Left = 536
    Top = 240
    Width = 169
    Height = 25
    Caption = 'Test using new "Val"  procedure'
    TabOrder = 9
    OnClick = TestMyValBtnClick
  end
  object StaticText1: TStaticText
    Left = 0
    Top = 444
    Width = 717
    Height = 20
    Cursor = crHandPoint
    Align = alBottom
    Alignment = taCenter
    Caption = 'Copyright  © 2005, 2007 Gary Darby,  www.DelphiForFun.org'
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clBlue
    Font.Height = -13
    Font.Name = 'MS Sans Serif'
    Font.Style = [fsUnderline]
    ParentFont = False
    TabOrder = 10
    OnClick = StaticText1Click
  end
end
